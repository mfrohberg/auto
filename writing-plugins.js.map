{"version":3,"sources":["webpack:///./docs/pages/plugins/writing-plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","currentPage","_ref6","_ref7","_ref8","_ref9","id","aria-hidden","_ref10","_ref11","_ref12","_ref13","target","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23"],"mappings":"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","file":"writing-plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/writing-plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Writing Plugins</h1>\n<p>If you've ever written a <code>webpack</code> plugin it's a lot like that.</p>\n<p>A plugin definition is:</p>\n<ul>\n<li>a name for the plugin, should match the <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins.html#plugin-declaration\">name of the package</Link> (REQUIRED)</li>\n<li>a class the has an <code>apply</code> function where a plugin hooks into various functions in auto (REQUIRED)</li>\n</ul>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; Auto, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"auto\"</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  name = <span className=\"hljs-string\">\"test\"</span>;<br /><br />  <span className=\"hljs-comment\">/** Tap into auto plugin points. */</span><br />  apply(auto: Auto) &#123;&#125;<br />&#125;<br /></code></pre>\n<p>Or in JavaScript:</p>\n<pre><code className=\"language-js\"><span className=\"hljs-built_in\">module</span>.exports = <span className=\"hljs-class\"><span className=\"hljs-keyword\">class</span> <span className=\"hljs-title\">TestPlugin</span> </span>&#123;<br />  <span className=\"hljs-keyword\">constructor</span>() &#123;<br />    <span className=\"hljs-keyword\">this</span>.name = <span className=\"hljs-string\">\"test\"</span>;<br />  &#125;<br /><br />  <span className=\"hljs-comment\">/**<br />   * Tap into auto plugin points.<br />   * @param &#123;import('@auto-it/core').default&#125; auto<br />   */</span><br />  apply(auto) &#123;&#125;<br />&#125;;<br /></code></pre>\n<h2 id=\"hooks\">Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#hooks\" aria-hidden=\"true\"></Link></h2>\n<p>Plugins work by hooking into various actions that <code>auto</code> has to do in order to facilitate a release or interact with your GitHub repo.</p>\n<p><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/hook-api-docs.html\">Read more about using hooks</Link></p>\n<h2 id=\"adding-options\">Adding Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#adding-options\" aria-hidden=\"true\"></Link></h2>\n<p>Most plugins will find the need to some some options from the user.\nThe constructor of the plugin gets access to the options passed in the <code>.autorc</code>.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; Auto, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"@auto-it/core\"</span>;<br /><br /><span className=\"hljs-keyword\">interface</span> TestPluginOptions &#123;<br />  someOption?: <span className=\"hljs-built_in\">boolean</span>;<br />&#125;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">/** The name of the plugin */</span><br />  name = <span className=\"hljs-string\">\"test\"</span>;<br /><br />  <span className=\"hljs-comment\">/** The options of the plugin */</span><br />  readonly options: TestPluginOptions;<br /><br />  <span className=\"hljs-comment\">/** Initialize the plugin with it's options */</span><br />  <span className=\"hljs-keyword\">constructor</span>(<span className=\"hljs-params\">options: TestPluginOptions</span>) &#123;<br />    <span className=\"hljs-keyword\">this</span>.options = options;<br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"validation\">Validation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#validation\" aria-hidden=\"true\"></Link></h3>\n<p>To get validate of the options passed to plugins, <code>auto</code> uses <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/gcanti/io-ts\" className=\"external-link\">io-ts</Link> and exports a utility function to validate the structured produced by <code>io-ts</code>.\nIt lets you defined your interfaces in JavaScript and easily convert them to TypeScript.\nThis means it's super simple to have type-safe code and runtime validation checking!</p>\n<p>First install the following:</p>\n<pre><code className=\"language-sh\">npm i --save io-ts fp-ts<br /><span className=\"hljs-comment\"># or</span><br />yarn add io-ts fp-ts<br /></code></pre>\n<p>Then convert your options interface to the equivalent <code>io-ts</code> structure.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> t <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"io-ts\"</span>;<br /><br /><span className=\"hljs-keyword\">const</span> pluginOptions = t.partial(&#123;<br />  someOption: t.boolean,<br />&#125;);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">type</span> TestPluginOptions = t.TypeOf&lt;<span className=\"hljs-keyword\">typeof</span> pluginOptions&gt;;<br /></code></pre>\n<p>Then tap into the <code>validateConfig</code> hook and use the <code>validatePluginConfiguration</code> utility.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; validatePluginConfiguration &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"@auto-it/core\"</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> MyPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">// ...</span><br />  apply(auto: Auto) &#123;<br />    auto.hooks.validateConfig.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> (name, options) =&gt; &#123;<br />      <span className=\"hljs-keyword\">if</span> (name === <span className=\"hljs-keyword\">this</span>.name || name === &#96;auto-plugin-$&#123;<span className=\"hljs-keyword\">this</span>.name&#125;&#96;) &#123;<br />        <span className=\"hljs-keyword\">return</span> validatePluginConfiguration(<span className=\"hljs-keyword\">this</span>.name, pluginOptions, options);<br />      &#125;<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<p>And that's it!\nNow <code>auto</code> will validate your plugins configuration before running.</p>\n<h2 id=\"example-plugin---npm-(simple)\">Example Plugin - NPM (simple) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#example-plugin---npm-(simple)\" aria-hidden=\"true\"></Link></h2>\n<p>To create a plugin simply make a class with an <code>apply</code> method and tap into the hooks you need.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> fs <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"fs\"</span>;<br /><span className=\"hljs-keyword\">import</span> &#123; promisify &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"util\"</span>;<br /><br /><span className=\"hljs-keyword\">import</span> &#123; IAutoHooks, Auto, SEMVER, execPromise &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"auto\"</span>;<br /><span className=\"hljs-keyword\">import</span> getConfigFromPackageJson <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"./package-config\"</span>;<br /><br /><span className=\"hljs-keyword\">const</span> readFile = promisify(fs.readFile);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> NPMPlugin &#123;<br />  <span className=\"hljs-keyword\">public</span> apply(auto: Auto) &#123;<br />    auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>));<br /><br />      <span className=\"hljs-keyword\">if</span> (author) &#123;<br />        auto.logger.log.info(<span className=\"hljs-string\">\"NPM: Got author information from package.json\"</span>);<br />        <span className=\"hljs-keyword\">return</span> author;<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>));<br /><br />      auto.logger.log.info(<br />        <span className=\"hljs-string\">\"NPM: Got previous version from package.json - \"</span>,<br />        version<br />      );<br /><br />      <span className=\"hljs-keyword\">if</span> (version) &#123;<br />        <span className=\"hljs-keyword\">return</span> auto.prefixRelease(<br />          <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>)).version<br />        );<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      auto.logger.log.info(<span className=\"hljs-string\">\"NPM: getting repo information from package.json\"</span>);<br />      <span className=\"hljs-keyword\">return</span> getConfigFromPackageJson();<br />    &#125;);<br /><br />    auto.hooks.publish.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<br />        <span className=\"hljs-string\">\"version\"</span>,<br />        version,<br />        <span className=\"hljs-string\">\"-m\"</span>,<br />        <span className=\"hljs-string\">\"Bump version to: %s [skip ci]\"</span>,<br />      ]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<span className=\"hljs-string\">\"publish\"</span>]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<br />        <span className=\"hljs-string\">\"push\"</span>,<br />        <span className=\"hljs-string\">\"--follow-tags\"</span>,<br />        <span className=\"hljs-string\">\"--set-upstream\"</span>,<br />        auto.remote,<br />        <span className=\"hljs-string\">\"$branch\"</span>,<br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<p><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/writing-publishing-plugins.html\">Read more about creating publishing plugins.</Link></p>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}