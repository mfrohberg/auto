{"version":3,"sources":["webpack:///./docs/pages/plugins/hook-api-docs.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","currentPage","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","id","aria-hidden","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20"],"mappings":"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","file":"hook-api-docs.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/hook-api-docs.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Hook APIs</h1>\n<p>Plugins work by &quot;hooking&quot; into various parts of <code>auto</code> to control or add to its behavior.</p>\n<p>The categories of hooks available to plugins are:</p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/init-hooks.html\">Init</Link> - Add functionality to <code>auto init</code></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/configuration-hooks.html\">Configuration</Link> - Detect, modify and validate <code>auto</code>'s configuration</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/log-parse-hooks.html\">Log Parser</Link> - Extend how <code>auto</code> analyzes commits</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/changelog-hooks.html\">Changelog</Link> - Change how <code>auto</code> renders changelogs</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html\">Release Lifecycle</Link> - Called during various release commands, these facilitate publishing the package</li>\n</ul>\n<p>The hooks that are called depends on the command is run.\nSome hooks are specific to a single command, such as the &quot;Init&quot; hooks, and others are called for every command.</p>\n<p>This is the general flow when any <code>auto</code> command is ran:</p>\n<ul>\n<li>Call configuration hooks</li>\n<li>Get <code>git log</code> =&gt; Pass through <code>LogParse</code> hooks</li>\n<li>If necessary: Create a changelog and =&gt; Call <code>Changelog</code> hooks</li>\n<li>Run release lifecycle hooks</li>\n</ul>\n<h2 id=\"plugin-ideas\">Plugin Ideas <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#plugin-ideas\" aria-hidden=\"true\"></Link></h2>\n<p>Having a plug-able release process means you can automate so many things.\nHere are a few ideas of what you could do.</p>\n<ul>\n<li><code>size-changelog</code>: Every time a <code>latest</code> release is made update a <code>size-changelog.md</code> with the bundle size</li>\n<li>Use the <code>afterRelease</code> hook to communicate changes to consumers (ex: twitter or slack)</li>\n</ul>\n<p>The documentation for each hook also lists examples of how the hook is used in various parts of <code>auto</code> and its plugins.</p>\n<h2 id=\"example-run%3A-auto-latest\">Example Run: <code>auto latest</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#example-run%3A-auto-latest\" aria-hidden=\"true\"></Link></h2>\n<p>The following Details the hooks called in a run of <code>auto latest</code> where a new version is published.</p>\n<ol>\n<li>All configuration hooks called</li>\n<li>Get <code>git log</code> =&gt; Pass through <code>LogParse</code> hooks</li>\n<li>Create a changelog and in the process call all changelog hooks</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html#beforecommitchangelog\">beforeCommitChangelog</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html#afterAddToChangelog\">afterAddToChangelog</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##version\">version</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##afterversion\">afterVersion</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##publish\">publish</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##afterpublish\">afterPublish</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##makerelease\">makeRelease</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html##afterrelease\">afterRelease</Link></li>\n</ol>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}