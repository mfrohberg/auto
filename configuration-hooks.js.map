{"version":3,"sources":["webpack:///./docs/pages/plugins/configuration-hooks.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","id","aria-hidden","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","target","_ref22","_ref23","_ref24"],"mappings":"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","file":"configuration-hooks.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/configuration-hooks.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Configuration Hooks</h1>\n<p>All of the following hooks in some way deal with detecting, modifying and validating <code>auto</code>'s configuration.</p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#beforerun\">beforeRun</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#modifyconfig\">modifyConfig</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#getauthor\">getAuthor</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#getpreviousversion\">getPreviousVersion</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#getrepository\">getRepository</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#validateconfig\">validateConfig</Link></li>\n</ul>\n<h2 id=\"beforerun\">beforeRun <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforerun\" aria-hidden=\"true\"></Link></h2>\n<p>Happens before any command is run.\nThis is a great place to check for platform specific secrets such as a npm token.</p>\n<pre><code className=\"language-ts\">auto.hooks.beforeRun.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> (config) =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    auto.logger.log.warn(<span className=\"hljs-string\">\"NPM Token is needed for the NPM plugin!\"</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<h2 id=\"modifyconfig\">modifyConfig <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#modifyconfig\" aria-hidden=\"true\"></Link></h2>\n<p>Modify what is in the config.\nYou must return the config in this hook.\nIf you plugins requires some option to be set this is the place to do it.</p>\n<pre><code className=\"language-ts\">auto.hooks.modifyConfig.tap(<span className=\"hljs-string\">\"test\"</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">config</span>) =&gt;</span> &#123;<br />  config.labels.released = &#123;<br />    name: <span className=\"hljs-string\">\"released\"</span>,<br />    description: <span className=\"hljs-string\">\"This issue/pull request has been released\"</span>,<br />  &#125;;<br /><br />  <span className=\"hljs-keyword\">return</span> config;<br />&#125;);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/cocoapods/README.html\">cocoapods</Link> - Sets <code>noVersionPrefix</code> to true for independent monorepos</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Sets <code>noVersionPrefix</code> to true for independent monorepos</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/release/README.html\">release</Link> - Adds <code>released</code> label</li>\n</ul>\n<h2 id=\"getauthor\">getAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getauthor\" aria-hidden=\"true\"></Link></h2>\n<p>Get git author to commit with.\nTypically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (author) &#123;<br />    <span className=\"hljs-keyword\">return</span> author;<br />  &#125;<br />&#125;);<br /></code></pre>\n<h2 id=\"getpreviousversion\">getPreviousVersion <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getpreviousversion\" aria-hidden=\"true\"></Link></h2>\n<p>Get the previous version.\nTypically from a package distribution description file.\nThis hooks is required for plugin that facilitate publishing.</p>\n<pre><code className=\"language-ts\">auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (version) &#123;<br />    <span className=\"hljs-keyword\">return</span> auto.prefixRelease(<br />      <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>)).version<br />    );<br />  &#125;<br />&#125;);<br /></code></pre>\n<h2 id=\"getrepository\">getRepository <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getrepository\" aria-hidden=\"true\"></Link></h2>\n<p>Get owner and repository for the project to automate releases for.\nTypically from a package distribution description file.\nFalls back to global <code>git config</code> author.</p>\n<pre><code className=\"language-ts\">auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> owner = <span className=\"hljs-comment\">// get the owner from package.json</span><br />  <span className=\"hljs-keyword\">const</span> repo = <span className=\"hljs-comment\">// get the repo from package.json</span><br /><br />  <span className=\"hljs-keyword\">return</span> &#123;<br />    owner,<br />    repo<br />  &#125;<br />&#125;);<br /></code></pre>\n<h2 id=\"validateconfig\">validateConfig <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#validateconfig\" aria-hidden=\"true\"></Link></h2>\n<p>Validate how your plugin is configured.\nMake sure to account for the <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/plugins.html#plugin-declaration\">different ways you plugin can be included</Link> in an <code>.autorc</code>.</p>\n<pre><code className=\"language-ts\">auto.hooks.validateConfig.tapPromise(<span className=\"hljs-string\">\"test\"</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">name, options</span>) =&gt;</span> &#123;<br />  <span className=\"hljs-keyword\">if</span> (name === <span className=\"hljs-keyword\">this</span>.name || name === &#96;auto-plugin-$&#123;<span className=\"hljs-keyword\">this</span>.name&#125;&#96;) &#123;<br />    <span className=\"hljs-keyword\">return</span>; <span className=\"hljs-comment\">// your validation error. Can either be strings for &#123; path, expectedType, value &#125;</span><br />  &#125;<br />&#125;);<br /></code></pre>\n<p><code>auto</code> and it's plugins use <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/gcanti/io-ts\" className=\"external-link\">io-ts</Link> to validate the options for a plugin.\nIf you're using typescript this is a great way to define the options for your plugin.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-comment\">// Types in TypeScript</span><br /><span className=\"hljs-keyword\">interface</span> Options &#123;<br />  level?: <span className=\"hljs-built_in\">string</span>;<br />  user?: <span className=\"hljs-built_in\">string</span>;<br />&#125;<br /><br /><span className=\"hljs-comment\">// The equivalent io-ts code</span><br /><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> t <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"io-ts\"</span>;<br /><br /><span className=\"hljs-keyword\">const</span> pluginOptions = t.partial(&#123;<br />  level: t.string,<br />  user: t.string,<br />&#125;);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">type</span> Options = t.TypeOf&lt;<span className=\"hljs-keyword\">typeof</span> pluginOptions&gt;;<br /></code></pre>\n<p>Since your type information will now be available at runtime (in <code>pluginOptions</code>) you can use this to validate the configuration!\nTo do this <code>auto</code> exposes a helper function to validate you plugins with the <code>io-ts</code> types.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; validatePluginConfiguration &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"@auto-it/core\"</span>;<br /><br />auto.hooks.validateConfig.tapPromise(<span className=\"hljs-string\">\"test\"</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">name, options</span>) =&gt;</span> &#123;<br />  <span className=\"hljs-keyword\">if</span> (name === <span className=\"hljs-keyword\">this</span>.name || name === &#96;auto-plugin-$&#123;<span className=\"hljs-keyword\">this</span>.name&#125;&#96;) &#123;<br />    <span className=\"hljs-keyword\">return</span> validatePluginConfiguration(<span className=\"hljs-keyword\">this</span>.name, pluginOptions, options);<br />  &#125;<br />&#125;);<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}