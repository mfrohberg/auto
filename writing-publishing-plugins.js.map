{"version":3,"sources":["webpack:///./docs/pages/plugins/writing-publishing-plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","id","currentPage","aria-hidden","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41"],"mappings":"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","file":"writing-publishing-plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/writing-publishing-plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Writing a Publishing Plugin</h1>\n<p>The main use for plugins is to automate your release process.\nThis page will walk you through implementing the <code>git-tag</code> plugin.</p>\n<blockquote>\n<p>It is recommended that you use TypeScript for the best development experience.\n<code>auto</code> is written in TypeScript and has extensive jsDoc comments throughout the code.\nTo make the following code work without compilation, just remove the types!</p>\n</blockquote>\n<h2 id=\"setup\">Setup <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#setup\" aria-hidden=\"true\"></Link></h2>\n<p>First create a file for your plugins.</p>\n<blockquote>\n<p>Make sure to set the name! It must be consistent with your packages name.</p>\n</blockquote>\n<p><strong><code>my-plugin.ts</code>:</strong></p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; Auto, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"@auto-it/core\"</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> GitTagPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">/** The name of the plugin */</span><br />  name = <span className=\"hljs-string\">\"my-git-tag\"</span>;<br /><br />  <span className=\"hljs-comment\">/** Tap into auto plugin points. */</span><br />  apply(auto: Auto) &#123;&#125;<br />&#125;<br /></code></pre>\n<h2 id=\"tap-required-hooks\">Tap Required Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#tap-required-hooks\" aria-hidden=\"true\"></Link></h2>\n<p>Plugins work by &quot;hooking&quot; into various parts of <code>auto</code> to control or add to its behavior.\nThe following hooks you must implement to get a publishing plugin working.</p>\n<h3 id=\"getpreviousversion\"><code>getPreviousVersion</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getpreviousversion\" aria-hidden=\"true\"></Link></h3>\n<p>This plugin will manage the version of the project solely using the tag.\nSet up this hook to tell <code>auto</code> the last release version of your project</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> GitTagPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">// ...</span><br />  apply(auto: Auto) &#123;<br />    <span className=\"hljs-comment\">/** Get the latest tag in the repo, if none then the first commit */</span><br />    <span className=\"hljs-keyword\">async</span> <span className=\"hljs-function\"><span className=\"hljs-keyword\">function</span> <span className=\"hljs-title\">getTag</span>(<span className=\"hljs-params\"></span>) </span>&#123;<br />      <span className=\"hljs-keyword\">try</span> &#123;<br />        <span className=\"hljs-keyword\">return</span> <span className=\"hljs-keyword\">await</span> auto.git!.getLatestTagInBranch();<br />      &#125; <span className=\"hljs-keyword\">catch</span> (error) &#123;<br />        <span className=\"hljs-keyword\">return</span> auto.prefixRelease(<span className=\"hljs-string\">\"0.0.0\"</span>);<br />      &#125;<br />    &#125;<br /><br />    auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-keyword\">this</span>.name, getTag);<br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"version\"><code>version</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#version\" aria-hidden=\"true\"></Link></h3>\n<p>In this hook you should increment the version of your project, tag it, and if necessary commit a file (ex: <code>package.json</code>).</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; inc, ReleaseType &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"semver\"</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> GitTagPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">// ...</span><br />  apply(auto: Auto) &#123;<br />    <span className=\"hljs-comment\">// ...</span><br />    auto.hooks.version.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> (version) =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> lastTag = <span className=\"hljs-keyword\">await</span> getTag();<br />      <span className=\"hljs-keyword\">const</span> newTag = inc(lastTag, version <span className=\"hljs-keyword\">as</span> ReleaseType);<br /><br />      <span className=\"hljs-keyword\">if</span> (!newTag) &#123;<br />        auto.logger.log.info(<span className=\"hljs-string\">\"No release found, doing nothing\"</span>);<br />        <span className=\"hljs-keyword\">return</span>;<br />      &#125;<br /><br />      <span className=\"hljs-keyword\">const</span> prefixedTag = auto.prefixRelease(newTag);<br /><br />      auto.logger.log.info(&#96;Tagging <span className=\"hljs-keyword\">new</span> tag: $&#123;lastTag&#125; =&gt; $&#123;prefixedTag&#125;&#96;);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<br />        <span className=\"hljs-string\">\"tag\"</span>,<br />        prefixedTag,<br />        <span className=\"hljs-string\">\"-m\"</span>,<br />        &#96;<span className=\"hljs-string\">\"Update version to $&#123;prefixedTag&#125;\"</span>&#96;,<br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"publish\"><code>publish</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#publish\" aria-hidden=\"true\"></Link></h3>\n<p>Finally publish your new version to a package management platform and push the new tag to GitHub.\nIn the case of the <code>git-tag</code> plugin pushing the tag to GitHub is the only thing we need to do.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> GitTagPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">// ...</span><br />  apply(auto: Auto) &#123;<br />    <span className=\"hljs-comment\">// ...</span><br />    auto.hooks.publish.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      auto.logger.log.info(<span className=\"hljs-string\">\"Pushing new tag to GitHub\"</span>);<br /><br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<br />        <span className=\"hljs-string\">\"push\"</span>,<br />        <span className=\"hljs-string\">\"--follow-tags\"</span>,<br />        <span className=\"hljs-string\">\"--set-upstream\"</span>,<br />        auto.remote,<br />        getCurrentBranch() || auto.baseBranch,<br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<hr />\n<p>Once you have the above hooks implemented you should be able to successfully use <code>auto</code> to publish a release!</p>\n<p>The above plugins is pretty simple and there are a bunch of features you can add to your plugin through hooks or functions that <code>auto</code> exports.</p>\n<h2 id=\"advanced-release-hooks\">Advanced Release Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#advanced-release-hooks\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"canary\"><code>canary</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#canary\" aria-hidden=\"true\"></Link></h3>\n<p>This hook enables <code>canary</code> releases for your projects.\nA <code>canary</code> version is a test version you publish for PRs or to test changes.</p>\n<p>Your package management platform needs to support a few things for canaries to be possible</p>\n<ol>\n<li>Separate Releases Lines - you should be able to publish to a release line that doesn't effect your main users (ex: when installing for the first time they should never get a <code>canary</code>)</li>\n<li>Lots of releases - it must support a lot of releases, especially if you make a bunch of PRs</li>\n</ol>\n<p><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html#canary\">Read more about the <code>canary</code> hook.</Link></p>\n<h3 id=\"next\"><code>next</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#next\" aria-hidden=\"true\"></Link></h3>\n<p>This hook enables <code>next</code> releases for your projects.\nA <code>next</code> release is the next version of your project.\nThink of it like an <code>alpha</code> or <code>beta</code> release line.</p>\n<p>Like the <code>canary</code> hook your package management platform must support separate release lines.</p>\n<p><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/release-lifecycle-hooks.html#next\">Read more about the <code>next</code> hook.</Link></p>\n<h2 id=\"other-useful-hooks\">Other Useful Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#other-useful-hooks\" aria-hidden=\"true\"></Link></h2>\n<p>These hooks are not required for publishing plugins, but can really improve the developer experience of it.</p>\n<h3 id=\"beforerun\"><code>beforeRun</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforerun\" aria-hidden=\"true\"></Link></h3>\n<p>Happens before anything is done.\nThis is a great place to check for platform specific secrets such as a npm token.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> GitTagPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-comment\">// ...</span><br />  apply(auto: Auto) &#123;<br />    auto.hooks.beforeRun.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\"><span className=\"hljs-params\">()</span> =&gt;</span> &#123;<br />      <span className=\"hljs-comment\">// Use the &#96;checkEnv&#96; function to warn about missing ENV variables</span><br />      auto.checkEnv(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-string\">\"CLIENT_ID\"</span>);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<h3 id=\"getauthor\"><code>getAuthor</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getauthor\" aria-hidden=\"true\"></Link></h3>\n<p>Get git author to commit with.\nTypically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">\"package.json\"</span>, <span className=\"hljs-string\">\"utf-8\"</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (author) &#123;<br />    <span className=\"hljs-keyword\">return</span> author;<br />  &#125;<br />&#125;);<br /></code></pre>\n<h3 id=\"getrepository\"><code>getRepository</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getrepository\" aria-hidden=\"true\"></Link></h3>\n<p>Get owner and repository for the project to automate releases for.\nTypically from a package distribution description file.\nFalls back to global <code>git config</code> author.</p>\n<pre><code className=\"language-ts\">auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> owner = <span className=\"hljs-comment\">// get the owner from package.json</span><br />  <span className=\"hljs-keyword\">const</span> repo = <span className=\"hljs-comment\">// get the repo from package.json</span><br /><br />  <span className=\"hljs-keyword\">return</span> &#123;<br />    owner,<br />    repo<br />  &#125;<br />&#125;);<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}