{"version":3,"sources":["webpack:///./docs/pages/plugins/init-hooks.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","currentPage","id","aria-hidden","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19"],"mappings":"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","file":"init-hooks.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/init-hooks.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Init Hooks</h1>\n<p>The <code>auto init</code> command provides an easy way to create an <code>.autorc</code> without reading too many docs.\nIt exposes hooks to get the basic information auto needs to function (<Link currentPage={(this && this.props || props).currentPage} to=\"#getrepo\">getRepo</Link> and <Link currentPage={(this && this.props || props).currentPage} to=\"#getauthor\">getAuthor</Link>).\nIt also provides hooks the set up your plugin quicker (<Link currentPage={(this && this.props || props).currentPage} to=\"#configureplugin\">configurePlugin</Link> and <Link currentPage={(this && this.props || props).currentPage} to=\"#createenv\">createEnv</Link>).</p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#writercfile\">writeRcFile</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#getrepo\">getRepo</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#getauthor\">getAuthor</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#configureplugin\">configurePlugin</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#createenv\">createEnv</Link></li>\n</ul>\n<h2 id=\"writercfile\">writeRcFile <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#writercfile\" aria-hidden=\"true\"></Link></h2>\n<p>Override where/how the rc file is written.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">class</span> MyPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  init(initializer: InteractiveInit) &#123;<br />    initializer.hooks.writeRcFile.tapPromise(<span className=\"hljs-string\">\"Example\"</span>, <span className=\"hljs-keyword\">async</span> (rc) =&gt; &#123;<br />      <span className=\"hljs-comment\">// write the file somewhere other than .autorc</span><br />      <span className=\"hljs-keyword\">return</span> filename;<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li>In Core: Defaults to writing rc file to root of project</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Writes RC file to package.json</li>\n</ul>\n<h2 id=\"getrepo\">getRepo <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getrepo\" aria-hidden=\"true\"></Link></h2>\n<p>Get or verify the repo information.</p>\n<p><em>Examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Gets repo info from package.json</li>\n</ul>\n<h2 id=\"getauthor\">getAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getauthor\" aria-hidden=\"true\"></Link></h2>\n<p>Get or verify the author information.</p>\n<p><em>Examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Gets author info from package.json</li>\n</ul>\n<h2 id=\"configureplugin\">configurePlugin <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#configureplugin\" aria-hidden=\"true\"></Link></h2>\n<p>Run extra configuration for a plugin. Here is where to display prompts to the user.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">class</span> MyPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  init(initializer: InteractiveInit) &#123;<br />    initializer.hooks.configurePlugin.tapPromise(<span className=\"hljs-string\">\"Example\"</span>, <span className=\"hljs-keyword\">async</span> (name) =&gt; &#123;<br />      <span className=\"hljs-keyword\">if</span> (name === <span className=\"hljs-string\">\"my-plugins\"</span>) &#123;<br />        <span className=\"hljs-keyword\">return</span> [<br />          name,<br />          &#123;<br />            <span className=\"hljs-comment\">// extra config options</span><br />          &#125;,<br />        ];<br />      &#125;<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/jira/README.html\">jira</Link> - Query the user for their JIRA url</li>\n</ul>\n<h2 id=\"createenv\">createEnv <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#createenv\" aria-hidden=\"true\"></Link></h2>\n<p>Add environment variables to get from the user.\nThese values are stored in a local <code>.env</code> file.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">class</span> MyPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  init(initializer: InteractiveInit) &#123;<br />    initializer.hooks.createEnv.tap(<span className=\"hljs-string\">\"Example\"</span>, <span className=\"hljs-function\">(<span className=\"hljs-params\">vars</span>) =&gt;</span> [<br />      ...vars,<br />      &#123;<br />        variable: <span className=\"hljs-string\">\"MY_TOKEN\"</span>,<br />        message: &#96;This is a very important secret&#96;,<br />      &#125;,<br />    ]);<br />  &#125;<br />&#125;<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Query the user for their npm token</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/slack/README.html\">slack</Link> - Query the user for their slack url</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}