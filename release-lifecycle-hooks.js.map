{"version":3,"sources":["webpack:///./docs/pages/plugins/release-lifecycle-hooks.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","id","aria-hidden","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_ref48","_ref49","_ref50","_ref51","_ref52","_ref53","_ref54"],"mappings":"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","file":"release-lifecycle-hooks.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/release-lifecycle-hooks.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Release Lifecycle Hooks</h1>\n<p>The following hooks are all called during various release commands (ex: <code>latest</code>, <code>next</code>, <code>canary</code>, <code>shipit</code>).\nThese hooks is where the publishing of your package actually happens.</p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#beforeshipit\">beforeShipIt</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#beforecommitchangelog\">beforeCommitChangelog</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#afteraddtochangelog\">afterAddToChangelog</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#version\">version</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#afterversion\">afterVersion</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#publish\">publish</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#afterpublish\">afterPublish</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#canary\">canary</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#next\">next</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#makerelease\">makeRelease</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#afterrelease\">afterRelease</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#aftershipit\">afterShipIt</Link></li>\n</ul>\n<h2 id=\"beforeshipit\">beforeShipIt <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforeshipit\" aria-hidden=\"true\"></Link></h2>\n<p>Happens before <code>shipit</code> is run.\nThis is a great way to throw an error if a token or key is not present.</p>\n<p>Context Object:</p>\n<ul>\n<li><code>releaseType</code> (<code>latest</code> | <code>old</code> | <code>next</code> | <code>canary</code>) - The type of release <code>shipit</code> will attempt to make.</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.beforeShipIt.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> (context) =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    <span className=\"hljs-keyword\">throw</span> <span className=\"hljs-keyword\">new</span> <span className=\"hljs-built_in\">Error</span>(<span className=\"hljs-string\">\"NPM Token is needed for the NPM plugin!\"</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/all-contributors/README.html\">all-contributors</Link> - Manage manual contribution additions in PRs</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/gh-pages/README.html\">gh-pages</Link> - Publishes your docs to GitHub pages on a <code>latest</code> release</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Exits early when lerna won't need to make a release</li>\n</ul>\n<h2 id=\"beforecommitchangelog\">beforeCommitChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforecommitchangelog\" aria-hidden=\"true\"></Link></h2>\n<p>Ran before the <code>changelog</code> command commits the new release notes to <code>CHANGELOG.md</code>.\nUseful for modifying the changelog as a whole or creating extra <code>changelog</code> files.\nThese files can be apart of the commit that updates the changelog.</p>\n<ul>\n<li><code>bump</code> - the semver bump</li>\n<li><code>commits</code> - the commits in the changelog</li>\n<li><code>currentVersion</code> - version that was just released</li>\n<li><code>lastRelease</code> - the version before the current version</li>\n<li><code>releaseNotes</code> - generated release notes for the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.beforeCommitChangelog.tap(<br />  <span className=\"hljs-string\">\"MyPlugin\"</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; currentVersion, commits, releaseNotes, lastRelease &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li>In Core: Create major version branches when <code>major</code> happens</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Create sub-package changelogs</li>\n</ul>\n<h2 id=\"afteraddtochangelog\">afterAddToChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afteraddtochangelog\" aria-hidden=\"true\"></Link></h2>\n<p>Ran after the <code>changelog</code> command adds the new release notes to <code>CHANGELOG.md</code>.\nUseful for getting extra commits into a release before publishing.</p>\n<ul>\n<li><code>bump</code> - the semver bump</li>\n<li><code>commits</code> - the commits in the changelog</li>\n<li><code>currentVersion</code> - version that was just released</li>\n<li><code>lastRelease</code> - the version before the current version</li>\n<li><code>releaseNotes</code> - generated release notes for the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.afterAddToChangelog.tap(<br />  <span className=\"hljs-string\">\"MyPlugin\"</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; currentVersion, commits, releaseNotes, lastRelease &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/all-contributors/README.html\">all-contributors</Link> - Make a commit for new contributions</li>\n</ul>\n<h2 id=\"version\">version <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#version\" aria-hidden=\"true\"></Link></h2>\n<p>Increment the version the package.\nThis is a good opportunity to <code>git tag</code> the release also.\nThis hooks is required for plugin that facilitate publishing.</p>\n<p>Here <code>npm</code> does it for us.</p>\n<pre><code className=\"language-ts\">auto.hooks.version.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<br />    <span className=\"hljs-string\">\"version\"</span>,<br />    version,<br />    <span className=\"hljs-string\">\"-m\"</span>,<br />    <span className=\"hljs-string\">\"Bump version to: %s [skip ci]\"</span>,<br />  ]);<br />&#125;);<br /></code></pre>\n<blockquote>\n<p>If you're implementing this hook for a publishing plugin you <strong>must</strong> commit (with <code>[skip ci]</code> in the message) and tag the version.</p>\n</blockquote>\n<h2 id=\"afterversion\">afterVersion <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterversion\" aria-hidden=\"true\"></Link></h2>\n<p>Ran after the package has been versioned.</p>\n<p><em>Examples:</em></p>\n<ul>\n<li>In Core: Used to exit early is new commits are detected on the remote</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/brew/README.html\">brew</Link> - Create a new brew formula once the package a=has been versioned</li>\n</ul>\n<h2 id=\"publish\">publish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#publish\" aria-hidden=\"true\"></Link></h2>\n<p>Publish the package to some package distributor.\nYou must push the tags to github!\nThis hooks is required for plugin that facilitate publishing.</p>\n<pre><code className=\"language-ts\">auto.hooks.publish.tapPromise(<span className=\"hljs-string\">\"NPM\"</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<br />    <span className=\"hljs-string\">\"version\"</span>,<br />    version,<br />    <span className=\"hljs-string\">\"-m\"</span>,<br />    <span className=\"hljs-string\">\"Bump version to: %s [skip ci]\"</span>,<br />  ]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<span className=\"hljs-string\">\"publish\"</span>]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<br />    <span className=\"hljs-string\">\"push\"</span>,<br />    <span className=\"hljs-string\">\"--follow-tags\"</span>,<br />    <span className=\"hljs-string\">\"--set-upstream\"</span>,<br />    auto.remote,<br />    <span className=\"hljs-string\">\"$branch\"</span>,<br />  ]);<br />&#125;);<br /></code></pre>\n<h2 id=\"afterpublish\">afterPublish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterpublish\" aria-hidden=\"true\"></Link></h2>\n<p>Ran after the package has been published.</p>\n<h2 id=\"canary\">canary <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#canary\" aria-hidden=\"true\"></Link></h2>\n<p>Used to publish a <code>canary</code> release.\nIn this hook you get the semver bump and the unique <code>canary</code> postfix ID.</p>\n<p>You can either return a string value of just the version or an object containing the following which will be rendered within and HTML Details element.</p>\n<ul>\n<li><code>newVersion</code> - The version published in the <code>canary</code> release or a header for the Details element.</li>\n<li><code>Details</code> - The body of the Details element</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.canary.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> (version, postFix) =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> lastRelease = <span className=\"hljs-keyword\">await</span> auto.git!.getLatestRelease();<br />  <span className=\"hljs-keyword\">const</span> current = <span className=\"hljs-keyword\">await</span> auto.getCurrentVersion(lastRelease);<br />  <span className=\"hljs-keyword\">const</span> nextVersion = inc(current, version <span className=\"hljs-keyword\">as</span> ReleaseType);<br />  <span className=\"hljs-keyword\">const</span> isScopedPackage = name.match(<span className=\"hljs-regexp\">/@\\S+\\/\\S+/</span>);<br />  <span className=\"hljs-keyword\">const</span> canaryVersion = &#96;$&#123;nextVersion&#125;-canary$&#123;postFix&#125;&#96;;<br /><br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<span className=\"hljs-string\">\"version\"</span>, canaryVersion, <span className=\"hljs-string\">\"--no-git-tag-version\"</span>]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"npm\"</span>, [<span className=\"hljs-string\">\"publish\"</span>, <span className=\"hljs-string\">\"--tag\"</span>, <span className=\"hljs-string\">\"canary\"</span>]);<br /><br />  auto.logger.verbose.info(<span className=\"hljs-string\">\"Successfully published canary version\"</span>);<br />  <span className=\"hljs-keyword\">return</span> canaryVersion;<br />&#125;);<br /></code></pre>\n<p><code>canary</code> version should not produce any of the following:</p>\n<ul>\n<li>a new tag</li>\n<li>any commits</li>\n<li>a new release</li>\n<li>any changes to changelogs</li>\n</ul>\n<p>It is &quot;test&quot; release and has no impact on any of your real releases.</p>\n<h2 id=\"next\">next <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#next\" aria-hidden=\"true\"></Link></h2>\n<p>Used to publish a <code>next</code> release.\nIn this hook you get the semver bump and a list of all pre-releases made.</p>\n<p>This hook <strong>must</strong> add the version it published to <code>preReleaseVersions</code> and return it.</p>\n<ul>\n<li><code>preReleaseVersions</code> - A list of prerelease version publish during the current run</li>\n<li><code>bump</code> - The version bump to apply</li>\n</ul>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123;<br />  determineNextVersion,<br />  execPromise,<br />  getCurrentBranch,<br />&#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">\"@auto-it/core\"</span>;<br /><br />auto.hooks.next.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> (preReleaseVersions, bump) =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> branch = getCurrentBranch() || <span className=\"hljs-string\">\"\"</span>;<br />  <span className=\"hljs-keyword\">const</span> lastRelease = <span className=\"hljs-keyword\">await</span> auto.git.getLatestRelease();<br />  <span className=\"hljs-keyword\">const</span> current =<br />    (<span className=\"hljs-keyword\">await</span> auto.git.getLastTagNotInBaseBranch(branch)) ||<br />    (<span className=\"hljs-keyword\">await</span> auto.getCurrentVersion(lastRelease));<br />  <span className=\"hljs-comment\">// Use this helper function to determine the next prerelease version</span><br />  <span className=\"hljs-keyword\">const</span> prerelease = determineNextVersion(lastRelease, current, bump, <span className=\"hljs-string\">\"next\"</span>);<br /><br />  <span className=\"hljs-comment\">// Create a new tag for it</span><br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<br />    <span className=\"hljs-string\">\"tag\"</span>,<br />    prerelease,<br />    <span className=\"hljs-string\">\"-m\"</span>,<br />    &#96;<span className=\"hljs-string\">\"Tag pre-release: $&#123;prerelease&#125;\"</span>&#96;,<br />  ]);<br />  <span className=\"hljs-comment\">// Push the tag</span><br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">\"git\"</span>, [<span className=\"hljs-string\">\"push\"</span>, auto.remote, <span className=\"hljs-string\">\"--tags\"</span>]);<br /><br />  <span className=\"hljs-comment\">// Make sure to add the version to the list</span><br />  preReleaseVersions.push(prerelease);<br />  <span className=\"hljs-keyword\">return</span> preReleaseVersions;<br />&#125;);<br /></code></pre>\n<p><code>next</code> version should not produce any of the following:</p>\n<ul>\n<li>any commits</li>\n<li>any changes to changelogs</li>\n</ul>\n<h2 id=\"makerelease\">makeRelease <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#makerelease\" aria-hidden=\"true\"></Link></h2>\n<p>Ran when trying to make a release during the <code>release</code> command has run.\nThis async hook gets the following arguments:</p>\n<ul>\n<li><code>dryRun</code> - Whether this is a dry run</li>\n<li><code>from</code> - Commit to start calculating the version from</li>\n<li><code>newVersion</code> - The version being released</li>\n<li><code>isPrerelease</code> - Whether the release being made is a prerelease</li>\n<li><code>fullReleaseNotes</code> - The generated release notes for all of the commits</li>\n<li><code>commits</code> - The commits included in the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.makeRelease.tapPromise(<span className=\"hljs-string\">\"MyPlugin\"</span>, <span className=\"hljs-keyword\">async</span> (options) =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!options.dryRun) &#123;<br />    <span className=\"hljs-keyword\">this</span>.logger.log.info(&#96;Releasing $&#123;options.newVersion&#125; to GitHub.&#96;);<br /><br />    <span className=\"hljs-keyword\">return</span> <span className=\"hljs-keyword\">this</span>.git!.publish(<br />      options.fullReleaseNotes,<br />      options.newVersion,<br />      options.isPrerelease<br />    );<br />  &#125;<br />&#125;);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Create GitHub releases for sub-packages</li>\n</ul>\n<h2 id=\"afterrelease\">afterRelease <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterrelease\" aria-hidden=\"true\"></Link></h2>\n<p>Ran after the <code>release</code> command has run, creating a new release on GitHub.\nThis async hook gets the following arguments:</p>\n<ul>\n<li><code>lastVersion</code> - the version that existed prior to the current release</li>\n<li><code>nextVersion</code> - version that was just released</li>\n<li><code>commits</code> - the commits in the release</li>\n<li><code>releaseNotes</code> - generated release notes for the release</li>\n<li><code>response</code> - the response returned from making the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.afterRelease.tapPromise(<br />  <span className=\"hljs-string\">\"MyPlugin\"</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; lastVersion, nextVersion, commits, releaseNotes, response &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/release/README.html\">release</Link> - Post comment on issues and PRs about release version</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/s3/README.html\">s3</Link> - Upload release assets to s3</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/slack/README.html\">slack</Link> - Post the release notes to slack</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/twitter/README.html\">twitter</Link> - Create a tweet about the new release</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/upload-assets/README.html\">upload-assets</Link> - Uses hook to upload files to newly created release</li>\n</ul>\n<h2 id=\"aftershipit\">afterShipIt <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#aftershipit\" aria-hidden=\"true\"></Link></h2>\n<p>Ran after the <code>shipit</code> command has run.</p>\n<ul>\n<li><code>newVersion</code> - The new version that was release</li>\n<li><code>commits</code> - the commits in the release</li>\n<li><code>data</code>\n<ul>\n<li><code>context</code> - The type of release that was created (<code>latest</code>, <code>next</code>, <code>canary</code>, or <code>old</code>)</li>\n</ul>\n</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.afterShipIt.tap(<br />  <span className=\"hljs-string\">\"MyPlugin\"</span>,<br />  <span className=\"hljs-keyword\">async</span> (newVersion, commits, &#123; context &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/gradle/README.html\">gradle</Link> - Uses hook to setup next snapshot version</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}