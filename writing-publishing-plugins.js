(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{98:function(e,a,s){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o,r=i(s(3)),t=function(e){if(e&&e.__esModule)return e;var a={};if(null!=e)for(var s in e)if(Object.prototype.hasOwnProperty.call(e,s)){var o=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,s):{};o.get||o.set?Object.defineProperty(a,s,o):a[s]=e[s]}return a.default=e,a}(s(0));i(s(2)),i(s(122));function i(e){return e&&e.__esModule?e:{default:e}}function n(e,a,s,r){o||(o="function"==typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103);var t=e&&e.defaultProps,i=arguments.length-3;if(a||0===i||(a={children:void 0}),a&&t)for(var n in t)void 0===a[n]&&(a[n]=t[n]);else a||(a=t||{});if(1===i)a.children=r;else if(i>1){for(var l=new Array(i),d=0;d<i;d++)l[d]=arguments[d+3];a.children=l}return{$$typeof:o,type:e,key:void 0===s?null:""+s,ref:null,props:a,_owner:null}}function l(e,a,s){return a in e?Object.defineProperty(e,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[a]=s,e}function d(){return(d=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var s=arguments[a];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e}).apply(this,arguments)}function c(e,a){if(null==e)return{};var s,o,r=function(e,a){if(null==e)return{};var s,o,r={},t=Object.keys(e);for(o=0;o<t.length;o++)s=t[o],a.indexOf(s)>=0||(r[s]=e[s]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)s=t[o],a.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}const h=e=>{let{to:a}=e,s=c(e,["to"]);return a.includes("http")?t.default.createElement("a",d({},e,{href:a})):("#"===a[0]&&(a=r.default.join("/auto/","pages/plugins/writing-publishing-plugins.html")+a),t.default.createElement("a",d({},s,{href:a,onClick:s=>{if(s.preventDefault(),"#"===e.to)return!1;const o=new URL(r.default.join(window.location.origin,a));window.history.pushState((e=>({href:e.href,pathname:e.pathname,hash:e.hash,query:e.query}))(o),null,a),e.onClick();const t=new CustomEvent("changeLocation",{detail:o});return dispatchEvent(t),!1}})))};h.defaultProps={href:"",onClick:()=>{}};const p=e=>{var a,s;return s=a=class extends t.default.Component{constructor(...e){super(...e),l(this,"state",{Comp:null})}componentDidMount(){!this.state.Comp&&this.props.shouldLoad&&e().then(e=>{this.setState({Comp:e.default})})}render(){const{Comp:e}=this.state;return e?t.default.createElement(e,this.props,this.props.children||null):null}},l(a,"defaultProps",{shouldLoad:!0}),s};p(()=>s.e(32).then(s.bind(null,123))),p(()=>s.e(32).then(s.bind(null,124)));var u=n("h1",{},void 0,"Writing a Publishing Plugin"),m=n("p",{},void 0,"The main use for plugins is to automate your release process. This page will walk you through implementing the ",n("code",{},void 0,"git-tag")," plugin."),v=n("blockquote",{},void 0,n("p",{},void 0,"It is recommended that you use TypeScript for the best development experience.",n("code",{},void 0,"auto")," is written in TypeScript and has extensive jsDoc comments throughout the code. To make the following code work without compilation, just remove the types!")),g=n("p",{},void 0,"First create a file for your plugins."),f=n("blockquote",{},void 0,n("p",{},void 0,"Make sure to set the name! It must be consistent with your packages name.")),b=n("p",{},void 0,n("strong",{},void 0,n("code",{},void 0,"my-plugin.ts"),":")),y=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,n("span",{className:"hljs-keyword"},void 0,"import")," { Auto, IPlugin } ",n("span",{className:"hljs-keyword"},void 0,"from")," ",n("span",{className:"hljs-string"},void 0,'"@auto-it/core"'),";",n("br",{}),n("br",{}),n("span",{className:"hljs-keyword"},void 0,"export")," ",n("span",{className:"hljs-keyword"},void 0,"default")," ",n("span",{className:"hljs-keyword"},void 0,"class")," GitTagPlugin ",n("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"/** The name of the plugin */"),n("br",{}),"  name = ",n("span",{className:"hljs-string"},void 0,'"my-git-tag"'),";",n("br",{}),n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"/** Tap into auto plugin points. */"),n("br",{}),"  apply(auto: Auto) {}",n("br",{}),"}",n("br",{}))),k=n("p",{},void 0,'Plugins work by "hooking" into various parts of ',n("code",{},void 0,"auto")," to control or add to its behavior. The following hooks you must implement to get a publishing plugin working."),j=n("code",{},void 0,"getPreviousVersion"),N=n("p",{},void 0,"This plugin will manage the version of the project solely using the tag. Set up this hook to tell ",n("code",{},void 0,"auto")," the last release version of your project"),w=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,n("span",{className:"hljs-keyword"},void 0,"export")," ",n("span",{className:"hljs-keyword"},void 0,"default")," ",n("span",{className:"hljs-keyword"},void 0,"class")," GitTagPlugin ",n("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"  apply(auto: Auto) {",n("br",{}),"    ",n("span",{className:"hljs-comment"},void 0,"/** Get the latest tag in the repo, if none then the first commit */"),n("br",{}),"    ",n("span",{className:"hljs-keyword"},void 0,"async")," ",n("span",{className:"hljs-function"},void 0,n("span",{className:"hljs-keyword"},void 0,"function")," ",n("span",{className:"hljs-title"},void 0,"getTag"),"(",n("span",{className:"hljs-params"}),") "),"{",n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"try")," {",n("br",{}),"        ",n("span",{className:"hljs-keyword"},void 0,"return")," ",n("span",{className:"hljs-keyword"},void 0,"await")," auto.git!.getLatestTagInBranch();",n("br",{}),"      } ",n("span",{className:"hljs-keyword"},void 0,"catch")," (error) {",n("br",{}),"        ",n("span",{className:"hljs-keyword"},void 0,"return")," auto.prefixRelease(",n("span",{className:"hljs-string"},void 0,'"0.0.0"'),");",n("br",{}),"      }",n("br",{}),"    }",n("br",{}),n("br",{}),"    auto.hooks.getPreviousVersion.tapPromise(",n("span",{className:"hljs-keyword"},void 0,"this"),".name, getTag);",n("br",{}),"  }",n("br",{}),"}",n("br",{}))),P=n("code",{},void 0,"version"),T=n("p",{},void 0,"In this hook you should increment the version of your project, tag it, and if necessary commit a file (ex: ",n("code",{},void 0,"package.json"),")."),x=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,n("span",{className:"hljs-keyword"},void 0,"import")," { inc, ReleaseType } ",n("span",{className:"hljs-keyword"},void 0,"from")," ",n("span",{className:"hljs-string"},void 0,'"semver"'),";",n("br",{}),n("br",{}),n("span",{className:"hljs-keyword"},void 0,"export")," ",n("span",{className:"hljs-keyword"},void 0,"default")," ",n("span",{className:"hljs-keyword"},void 0,"class")," GitTagPlugin ",n("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"  apply(auto: Auto) {",n("br",{}),"    ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"    auto.hooks.version.tapPromise(",n("span",{className:"hljs-keyword"},void 0,"this"),".name, ",n("span",{className:"hljs-keyword"},void 0,"async")," (version) => {",n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"const")," lastTag = ",n("span",{className:"hljs-keyword"},void 0,"await")," getTag();",n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"const")," newTag = inc(lastTag, version ",n("span",{className:"hljs-keyword"},void 0,"as")," ReleaseType);",n("br",{}),n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"if")," (!newTag) {",n("br",{}),"        auto.logger.log.info(",n("span",{className:"hljs-string"},void 0,'"No release found, doing nothing"'),");",n("br",{}),"        ",n("span",{className:"hljs-keyword"},void 0,"return"),";",n("br",{}),"      }",n("br",{}),n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"const")," prefixedTag = auto.prefixRelease(newTag);",n("br",{}),n("br",{}),"      auto.logger.log.info(`Tagging ",n("span",{className:"hljs-keyword"},void 0,"new")," tag: ${lastTag} => ${prefixedTag}`);",n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",n("span",{className:"hljs-string"},void 0,'"git"'),", [",n("br",{}),"        ",n("span",{className:"hljs-string"},void 0,'"tag"'),",",n("br",{}),"        prefixedTag,",n("br",{}),"        ",n("span",{className:"hljs-string"},void 0,'"-m"'),",",n("br",{}),"        `",n("span",{className:"hljs-string"},void 0,'"Update version to ${prefixedTag}"'),"`,",n("br",{}),"      ]);",n("br",{}),"    });",n("br",{}),"  }",n("br",{}),"}",n("br",{}))),O=n("code",{},void 0,"publish"),L=n("p",{},void 0,"Finally publish your new version to a package management platform and push the new tag to GitHub. In the case of the ",n("code",{},void 0,"git-tag")," plugin pushing the tag to GitHub is the only thing we need to do."),R=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,n("span",{className:"hljs-keyword"},void 0,"export")," ",n("span",{className:"hljs-keyword"},void 0,"default")," ",n("span",{className:"hljs-keyword"},void 0,"class")," GitTagPlugin ",n("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"  apply(auto: Auto) {",n("br",{}),"    ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"    auto.hooks.publish.tapPromise(",n("span",{className:"hljs-keyword"},void 0,"this"),".name, ",n("span",{className:"hljs-keyword"},void 0,"async")," () => {",n("br",{}),"      auto.logger.log.info(",n("span",{className:"hljs-string"},void 0,'"Pushing new tag to GitHub"'),");",n("br",{}),n("br",{}),"      ",n("span",{className:"hljs-keyword"},void 0,"await")," execPromise(",n("span",{className:"hljs-string"},void 0,'"git"'),", [",n("br",{}),"        ",n("span",{className:"hljs-string"},void 0,'"push"'),",",n("br",{}),"        ",n("span",{className:"hljs-string"},void 0,'"--follow-tags"'),",",n("br",{}),"        ",n("span",{className:"hljs-string"},void 0,'"--set-upstream"'),",",n("br",{}),"        auto.remote,",n("br",{}),"        getCurrentBranch() || auto.baseBranch,",n("br",{}),"      ]);",n("br",{}),"    });",n("br",{}),"  }",n("br",{}),"}",n("br",{}))),I=n("hr",{}),S=n("p",{},void 0,"Once you have the above hooks implemented you should be able to successfully use ",n("code",{},void 0,"auto")," to publish a release!"),A=n("p",{},void 0,"The above plugins is pretty simple and there are a bunch of features you can add to your plugin through hooks or functions that ",n("code",{},void 0,"auto")," exports."),C=n("code",{},void 0,"canary"),G=n("p",{},void 0,"This hook enables ",n("code",{},void 0,"canary")," releases for your projects. A ",n("code",{},void 0,"canary")," version is a test version you publish for PRs or to test changes."),E=n("p",{},void 0,"Your package management platform needs to support a few things for canaries to be possible"),_=n("ol",{},void 0,n("li",{},void 0,"Separate Releases Lines - you should be able to publish to a release line that doesn't effect your main users (ex: when installing for the first time they should never get a ",n("code",{},void 0,"canary"),")"),n("li",{},void 0,"Lots of releases - it must support a lot of releases, especially if you make a bunch of PRs")),q=n("code",{},void 0,"canary"),H=n("code",{},void 0,"next"),M=n("p",{},void 0,"This hook enables ",n("code",{},void 0,"next")," releases for your projects. A ",n("code",{},void 0,"next")," release is the next version of your project. Think of it like an ",n("code",{},void 0,"alpha")," or ",n("code",{},void 0,"beta")," release line."),D=n("p",{},void 0,"Like the ",n("code",{},void 0,"canary")," hook your package management platform must support separate release lines."),$=n("code",{},void 0,"next"),F=n("p",{},void 0,"These hooks are not required for publishing plugins, but can really improve the developer experience of it."),U=n("code",{},void 0,"beforeRun"),B=n("p",{},void 0,"Happens before anything is done. This is a great place to check for platform specific secrets such as a npm token."),J=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,n("span",{className:"hljs-keyword"},void 0,"export")," ",n("span",{className:"hljs-keyword"},void 0,"default")," ",n("span",{className:"hljs-keyword"},void 0,"class")," GitTagPlugin ",n("span",{className:"hljs-keyword"},void 0,"implements")," IPlugin {",n("br",{}),"  ",n("span",{className:"hljs-comment"},void 0,"// ..."),n("br",{}),"  apply(auto: Auto) {",n("br",{}),"    auto.hooks.beforeRun.tap(",n("span",{className:"hljs-keyword"},void 0,"this"),".name, ",n("span",{className:"hljs-function"},void 0,n("span",{className:"hljs-params"},void 0,"()")," =>")," {",n("br",{}),"      ",n("span",{className:"hljs-comment"},void 0,"// Use the `checkEnv` function to warn about missing ENV variables"),n("br",{}),"      auto.checkEnv(",n("span",{className:"hljs-keyword"},void 0,"this"),".name, ",n("span",{className:"hljs-string"},void 0,'"CLIENT_ID"'),");",n("br",{}),"    });",n("br",{}),"  }",n("br",{}),"}",n("br",{}))),V=n("code",{},void 0,"getAuthor"),W=n("p",{},void 0,"Get git author to commit with. Typically from a package distribution description file."),Y=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,"auto.hooks.getAuthor.tapPromise(",n("span",{className:"hljs-string"},void 0,'"NPM"'),", ",n("span",{className:"hljs-keyword"},void 0,"async")," () => {",n("br",{}),"  ",n("span",{className:"hljs-keyword"},void 0,"const")," { author } = ",n("span",{className:"hljs-built_in"},void 0,"JSON"),".parse(",n("span",{className:"hljs-keyword"},void 0,"await")," readFile(",n("span",{className:"hljs-string"},void 0,'"package.json"'),", ",n("span",{className:"hljs-string"},void 0,'"utf-8"'),"));",n("br",{}),n("br",{}),"  ",n("span",{className:"hljs-keyword"},void 0,"if")," (author) {",n("br",{}),"    ",n("span",{className:"hljs-keyword"},void 0,"return")," author;",n("br",{}),"  }",n("br",{}),"});",n("br",{}))),z=n("code",{},void 0,"getRepository"),K=n("p",{},void 0,"Get owner and repository for the project to automate releases for. Typically from a package distribution description file. Falls back to global ",n("code",{},void 0,"git config")," author."),Q=n("pre",{},void 0,n("code",{className:"language-ts"},void 0,"auto.hooks.getRepository.tapPromise(",n("span",{className:"hljs-string"},void 0,"'NPM'"),", ",n("span",{className:"hljs-keyword"},void 0,"async")," () => {",n("br",{}),"  ",n("span",{className:"hljs-keyword"},void 0,"const")," owner = ",n("span",{className:"hljs-comment"},void 0,"// get the owner from package.json"),n("br",{}),"  ",n("span",{className:"hljs-keyword"},void 0,"const")," repo = ",n("span",{className:"hljs-comment"},void 0,"// get the repo from package.json"),n("br",{}),n("br",{}),"  ",n("span",{className:"hljs-keyword"},void 0,"return")," {",n("br",{}),"    owner,",n("br",{}),"    repo",n("br",{}),"  }",n("br",{}),"});",n("br",{})));var X=e=>n("div",{className:e.className},void 0,n("section",{},void 0,u,m,v,n("h2",{id:"setup"},void 0,"Setup ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#setup","aria-hidden":"true"})),g,f,b,y,n("h2",{id:"tap-required-hooks"},void 0,"Tap Required Hooks ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#tap-required-hooks","aria-hidden":"true"})),k,n("h3",{id:"getpreviousversion"},void 0,j," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getpreviousversion","aria-hidden":"true"})),N,w,n("h3",{id:"version"},void 0,P," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#version","aria-hidden":"true"})),T,x,n("h3",{id:"publish"},void 0,O," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#publish","aria-hidden":"true"})),L,R,I,S,A,n("h2",{id:"advanced-release-hooks"},void 0,"Advanced Release Hooks ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#advanced-release-hooks","aria-hidden":"true"})),n("h3",{id:"canary"},void 0,C," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#canary","aria-hidden":"true"})),G,E,_,n("p",{},void 0,n(h,{currentPage:e.currentPage,to:"/auto/pages/plugins/release-lifecycle-hooks.html#canary"},void 0,"Read more about the ",q," hook.")),n("h3",{id:"next"},void 0,H," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#next","aria-hidden":"true"})),M,D,n("p",{},void 0,n(h,{currentPage:e.currentPage,to:"/auto/pages/plugins/release-lifecycle-hooks.html#next"},void 0,"Read more about the ",$," hook.")),n("h2",{id:"other-useful-hooks"},void 0,"Other Useful Hooks ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#other-useful-hooks","aria-hidden":"true"})),F,n("h3",{id:"beforerun"},void 0,U," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#beforerun","aria-hidden":"true"})),B,J,n("h3",{id:"getauthor"},void 0,V," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getauthor","aria-hidden":"true"})),W,Y,n("h3",{id:"getrepository"},void 0,z," ",n(h,{currentPage:e.currentPage,className:"fas fa-hashtag headerLink",to:"#getrepository","aria-hidden":"true"})),K,Q));a.default=X,e.exports=a.default}}]);
//# sourceMappingURL=writing-publishing-plugins.js.map