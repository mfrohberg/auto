{"version":3,"sources":["webpack:///./docs/pages/plugins/changelog-hooks.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","id","aria-hidden","_ref5","_ref6","target","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26"],"mappings":"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","file":"changelog-hooks.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins/changelog-hooks.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Changelog Hooks</h1>\n<p>One of the main outputs from <code>auto</code> is the changelogs it produces.\nThe changelog is created from a set of commits that has been parsed using the <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/plugins/log-parse.html\">log parser</Link>.\nThe hooks it provides allow you to customize everything about how the changelog renders.</p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#oncreatechangelog\">onCreateChangelog</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#addtobody\">addToBody</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#renderchangelogline\">renderChangelogLine</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#renderchangelogtitle\">renderChangelogTitle</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#renderchangelogauthor\">renderChangelogAuthor</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#renderchangelogauthorline\">renderChangelogAuthorLine</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#createchangelogtitle\">createChangelogTitle</Link></li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"#omitreleasenotes\">omitReleaseNotes</Link></li>\n</ul>\n<h2 id=\"oncreatechangelog\">onCreateChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#oncreatechangelog\" aria-hidden=\"true\"></Link></h2>\n<p>This is where you hook into the changelog's hooks.\nSee examples below.</p>\n<h2 id=\"addtobody\">addToBody <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#addtobody\" aria-hidden=\"true\"></Link></h2>\n<p>Add extra content to your changelogs.\nThis hook provide all the current &quot;extra&quot; notes and all of the commits for the changelog.\nYou must return the notes array.</p>\n<p>The following adds a random GIF from <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://giphy.com\" className=\"external-link\">giphy</Link> to each new changelog.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Giphy'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogLine.tapPromise(<br />    <span className=\"hljs-string\">'Giphy'</span>,<br />    <span className=\"hljs-keyword\">async</span> (notes, commits) =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> response = <span className=\"hljs-keyword\">await</span> fetch(&#96;https:<span className=\"hljs-comment\">//api.giphy.com/v1/gifs/random?api_key=$&#123;process.env.GIPHY_KEY&#125;&#96;);</span><br />      <span className=\"hljs-keyword\">const</span> json = <span className=\"hljs-keyword\">await</span> response.json();<br />      <span className=\"hljs-keyword\">const</span> &#123; data: gif &#125; = json;<br /><br />      <span className=\"hljs-keyword\">return</span> [...notes, &#96;![$&#123;gif.title&#125;]($&#123;gif.url&#125;)\\n&#96;]<br />    &#125;<br />  );<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/first-time-contributor/README.html\">first-time-contributor</Link> - Add new contributor announcements to changelogs</li>\n</ul>\n<h2 id=\"renderchangelogline\">renderChangelogLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogline\" aria-hidden=\"true\"></Link></h2>\n<p>Change how the changelog renders lines.\nThis hook provides the commit and the current state of the line render.\nYou must return the commit and the line string state as a tuple ([commit, line]).</p>\n<p>The following plugin would change all the bullet points in the changelog to star emojis.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogLine.tapPromise(<br />    <span className=\"hljs-string\">'Stars'</span>,<br />    <span className=\"hljs-keyword\">async</span> (commit, line) =&gt;<br />      [commit, &#96;$&#123;line.replace(<span className=\"hljs-string\">'-'</span>, <span className=\"hljs-string\">':star:'</span>)&#125;\\n&#96;]<br />  );<br />);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/jira/README.html\">jira</Link> - Render JIRA story information in the changelog</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Render monorepo information in the changelog</li>\n</ul>\n<h2 id=\"renderchangelogtitle\">renderChangelogTitle <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogtitle\" aria-hidden=\"true\"></Link></h2>\n<p>Change how the changelog renders titles.\nThe hook provides the current label for the section and all the configured changelog titles.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogTitle.tap(<br />    <span className=\"hljs-string\">'My Titles'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">label, changelogTitles</span>) =&gt;</span> &#96;:heart: $&#123;changelogTitles[label]&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h2 id=\"renderchangelogauthor\">renderChangelogAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthor\" aria-hidden=\"true\"></Link></h2>\n<p>Change how the changelog renders author accounts (ex: linking to GitHub accounts).\nThis is both the author on each commit note and the user in the author section (the part between parentheses).\nThis is generally a link to some profile.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogAuthor.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, commit</span>) =&gt;</span> &#96;:heart: $&#123;author.name&#125;/$&#123;commit.authorEmail&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h2 id=\"renderchangelogauthorline\">renderChangelogAuthorLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthorline\" aria-hidden=\"true\"></Link></h2>\n<p>Change how the changelog renders each line in the authors section.\nThe hook provides the author object and the user created with <code>renderChangelogAuthor</code>.\nHere is where you might display extra info about the author, such as their full name.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogAuthorLine.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, user</span>) =&gt;</span> &#96;:shipit: $&#123;author.name&#125; ($&#123;user&#125;)\\n&#96;<br />  );<br />);<br /></code></pre>\n<h2 id=\"createchangelogtitle\">createChangelogTitle <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#createchangelogtitle\" aria-hidden=\"true\"></Link></h2>\n<p>Control the titles in the <code>CHANGELOG.md</code></p>\n<pre><code className=\"language-ts\"><span className=\"hljs-comment\">// Render only the date in the title</span><br />auto.hooks.onCreateRelease.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\">(<span className=\"hljs-params\">release</span>) =&gt;</span> &#123;<br />  release.hooks.createChangelogTitle.tap(<br />    &#96;$&#123;<span className=\"hljs-keyword\">this</span>.name&#125; - lerna independent&#96;,<br />    <span className=\"hljs-function\"><span className=\"hljs-params\">()</span> =&gt;</span> <span className=\"hljs-string\">\"\"</span><br />  );<br />&#125;);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li>In Core: Powers the <code>auto changelog --title</code> flag</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\">npm</Link> - Gives independent monorepo a different title</li>\n</ul>\n<h2 id=\"omitreleasenotes\">omitReleaseNotes <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#omitreleasenotes\" aria-hidden=\"true\"></Link></h2>\n<p>Control what commits get into the additional release notes section.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\">(<span className=\"hljs-params\">changelog</span>) =&gt;</span> &#123;<br />  changelog.hooks.omitReleaseNotes.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\">(<span className=\"hljs-params\">commit</span>) =&gt;</span><br />    commit.subject.includes(<span className=\"hljs-string\">\"WIP\"</span>)<br />  );<br />&#125;);<br /></code></pre>\n<p><em>Other examples:</em></p>\n<ul>\n<li>In Core: Ignore release notes in PRs from common bot accounts</li>\n<li><Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/omit-release-notes/README.html\">omit-release-notes</Link> - Omit release notes from authors, labels, and more</li>\n</ul>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}